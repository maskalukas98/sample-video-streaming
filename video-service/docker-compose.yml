services:
  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    command: [ "npm", "start" ]
    network_mode: "host"
    depends_on:
      - postgres-db
      - redis
  postgres-db:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    ports:
      - '5443:5432'
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=admin123
      - POSTGRESQL_DATABASE=videos_db
    networks:
      - vs_network
  redis:
    image: bitnami/redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - vs_network
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2182:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "view_event:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


volumes:
  videos_db_data:
  redis-data:

networks:
  vs_network:
    driver: bridge
